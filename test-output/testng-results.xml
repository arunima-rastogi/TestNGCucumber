<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1104" started-at="2020-01-06T11:35:03Z" finished-at="2020-01-06T11:35:04Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="1104" started-at="2020-01-06T11:35:03Z" finished-at="2020-01-06T11:35:04Z">
      <class name="CucumberRunner.CucumberRunner">
        <test-method status="PASS" signature="setUp()[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="setUp" is-config="true" duration-ms="4400" started-at="2020-01-06T06:34:59Z" finished-at="2020-01-06T06:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="setUpClass" is-config="true" duration-ms="112" started-at="2020-01-06T06:35:03Z" finished-at="2020-01-06T06:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="runScenario" duration-ms="119" started-at="2020-01-06T06:35:04Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-06T06:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Cucumber expressions example"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sample testng feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownr(org.testng.ITestResult)[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="tearDownr" is-config="true" duration-ms="383" started-at="2020-01-06T06:35:04Z" finished-at="2020-01-06T06:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownr -->
        <test-method status="PASS" signature="takeScreenshot()[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="takeScreenshot" is-config="true" duration-ms="321" started-at="2020-01-06T06:35:04Z" finished-at="2020-01-06T06:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="tearDownClass" is-config="true" duration-ms="107" started-at="2020-01-06T06:35:04Z" finished-at="2020-01-06T06:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="generateHTMLReports()[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="generateHTMLReports" is-config="true" duration-ms="1156" started-at="2020-01-06T06:35:05Z" finished-at="2020-01-06T06:35:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateHTMLReports -->
        <test-method status="PASS" signature="quit()[pri:0, instance:CucumberRunner.CucumberRunner@42dafa95]" name="quit" is-config="true" duration-ms="612" started-at="2020-01-06T06:35:06Z" finished-at="2020-01-06T06:35:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- CucumberRunner.CucumberRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
